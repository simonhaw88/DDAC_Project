@model DDAC_Project.Models.Album
@{
}
 
<div class="container p-4 border border-2">
    <div class="row border border-2">
        <h3>Create Album</h3>
    </div>
    @using (Html.BeginForm("Create", "Album", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        <div class="form-group">
            @Html.Label("Name")
            @Html.TextBoxFor(m => m.Name, "", new { @class = "form-control", @placeholder = "Enter album's name" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.Label("Description")
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @placeholder = "Enter album's description" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.Label("Price")
            @Html.TextBoxFor(m => m.Price, "", new { @type = "number", @step = "0.01", @class = "form-control", @placeholder = "Enter album's price" })
            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Quantity")
            @Html.TextBoxFor(m => m.Stock, "", new { @type = "number", @class = "form-control", @placeholder = "Enter album's stock" })
            @Html.ValidationMessageFor(m => m.Stock, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("CountryOfOrigin")
            @Html.DropDownListFor(model => model.CountryOfOrigin, new SelectList(Enum.GetValues(typeof(CountryEnum)).OfType<CountryEnum>().Select(
            m => new { Text = m.ToString(), Value = m.ToString() }).ToList(), "Value", "Text"), "Select Country", new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(m => m.CountryOfOrigin, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.Label("ReleaseDate")
            @Html.TextBoxFor(m => m.ReleaseDate, "", new { @type = "date", @class = "form-control", @placeholder = "Enter album's release date" })
            @Html.ValidationMessageFor(m => m.ReleaseDate, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.Label("Category")
            <select class="form-control" name="AlbumCategoryId">
                @if (ViewBag.AlbumCategory != null)
                {
                    @foreach (var category in ViewBag.AlbumCategory)
                    {
                        <option value="@category.AlbumCategoryId">@category.Name</option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(m => m.AlbumCategoryId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.Label("Artist")
            @Html.TextBoxFor(m => m.Artist, "", new { @class = "form-control", @placeholder = "Enter artist's name" })
            @Html.ValidationMessageFor(m => m.Artist, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.Label("FormFile")
            <input asp-for="@Model.FormFile" class="form-control" type="file">

        </div>
        <div class="row border border-2 mt-3">
            <h3>Tracks</h3>
        </div>
        <div class="form-group">
            @Html.Label("Track.Name")
            @Html.TextBoxFor(m => m.Track.Name, "", new { @class = "form-control", @placeholder = "Enter track's name" })
            @Html.ValidationMessageFor(m => m.Track.Name, "", new { @class = "text-danger" })
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
        @Html.ValidationMessage("fail", new { @class = "text-danger" })
        @Html.ValidationMessage("success", new { @class = "text-success" })


    }

</div>
